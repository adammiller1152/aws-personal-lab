AWSTemplateFormatVersion: "2010-09-09"
Description: Deploys the resources required to monitor console logins within the account and send a notification to a specified e-mail address when a specific IAM user logs in
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: CloudWatch
        Parameters:
          - Retention
          - IAMUser

      - Label:
          default: KMS
        Parameters:
          - KMSUserName

      - Label:
          default: SNS
        Parameters:
          - Email

      - Label:
          default: General
        Parameters:
          - LabNetworkStackName

    ParameterLabels:
      Retention:
        default: Log Retention in Days
      IAMUser:
        default: IAM User Name
      KMSUserName:
        default: IAM User Name
      Email:
        default: E-mail Address
      LabNetworkStackName:
        default: Stack Name

Parameters:
  Retention:
    Type: String
    Description: The number of days to retain log events
    AllowedValues:
      - 1
      - 3
      - 5
      - 7
      - 14
      - 30
      - 60
      - 90
      - 120
      - 150
      - 180
      - 365
      - 400
      - 545
      - 731
      - 1827
      - 3653
    Default: 7
    ConstraintDescription: Must be a retention period from the list
  IAMUser:
    Type: String
    Description: The IAM User name which will trigger CloudWatch Alarms when successfully logging into the AWS Console
  KMSUserName:
    Type: String
    Description: The IAM User name which will be granted permissions within the KMS Key Policy to decrypt encrypted logs delivered by CloudTrail
  Email:
    Type: String
    Description: The e-mail address to notify when the specified IAM User logs into the AWS Console
    AllowedPattern: ^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$
    ConstraintDescription: "Must be a valid E-mail Address in the formation of <name>@<domain>.<top-level domain> (example: cloud_watch_alarms@companymail.net)"
  LabNetworkStackName:
    Type: String
    Description: The Stack Name associated with the 'CreateLabNetwork.yaml' deployment
    Default: CreateLabNetwork
    ConstraintDescription: Must be a valid CloudFormation Stack

Resources:
  # Create KMS Key to encrypt logs delivered by CloudTrail
  CreateKMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: The KMS key associated with encrypting logs delivered by CloudTrail
      PendingWindowInDays: 7
      KeyPolicy:
        Version: 2012-10-17
        Id: lab-kms-key-ct
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:user/${KMSUserName}"
            Action:
              - kms:DescribeKey
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey
              - kms:GenerateDataKeyWithoutPlaintext
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - kms:DescribeKey
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey
              - kms:GenerateDataKeyWithoutPlaintext
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub "cloudtrail.amazonaws.com"
            Action:
              - kms:DescribeKey
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey
              - kms:GenerateDataKeyWithoutPlaintext
            Resource: "*"

  CreateKMSAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/lab-cloudtrail
      TargetKeyId: !GetAtt CreateKMSKey.KeyId

  # Create an IAM Role to be used within CloudTrail to handle the CloudWatch Logs
  CreateIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - cloudtrail.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LogGroupPermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !GetAtt CreateCWLogGroup.Arn
      Path: /
      Description: "Role assigned to CloudTrail LabTrail"
      RoleName: lab-cloudtrail-role

  # Create S3 Bucket Policy allowing CloudTrail permissions to the S3 Bucket
  CreateS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Fn::ImportValue:
          !Sub "${LabNetworkStackName}-S3Bucket"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !Sub
              - "arn:aws:s3:::${labbucket}"
              - labbucket: 
                  Fn::ImportValue:
                    !Sub "${LabNetworkStackName}-S3Bucket"
            Condition:
              StringEquals:
                aws:SourceArn: !Sub "arn:aws:cloudtrail:${AWS::Region}:${AWS::AccountId}:trail/LabTrail"
          - Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub
              - "arn:aws:s3:::${labbucket}/AWSLogs/${AWS::AccountId}/*"
              - labbucket: 
                  Fn::ImportValue:
                    !Sub "${LabNetworkStackName}-S3Bucket"
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
                aws:SourceArn: !Sub "arn:aws:cloudtrail:${AWS::Region}:${AWS::AccountId}:trail/LabTrail"

  # Create an SNS topic used to send alarm notifications
  CreateAlarmNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: LoginNotificationTopic
      Subscription:
        - Endpoint: !Ref Email
          Protocol: email

  # Create log group to be used by CloudTrail
  CreateCWLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !GetAtt CreateKMSKey.Arn
      LogGroupName: "CloudTrail/DefaultLogs"
      RetentionInDays: !Ref Retention

  # Create a new CloudTrail Trail within the account
  CreateCloudTrail:
    Type: AWS::CloudTrail::Trail
    Properties:
      CloudWatchLogsLogGroupArn: !GetAtt CreateCWLogGroup.Arn
      CloudWatchLogsRoleArn: !GetAtt CreateIAMRole.Arn
      EnableLogFileValidation: true
      IncludeGlobalServiceEvents: true
      IsLogging: true
      IsMultiRegionTrail: false
      KMSKeyId: !Ref CreateKMSKey
      S3BucketName: 
        Fn::ImportValue:
          !Sub "${LabNetworkStackName}-S3Bucket"
      TrailName: LabTrail

  # Create a metric filter
  CreateMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: !Sub '{$.userIdentity.type = "IAMUser" && $.userIdentity.userName = "${IAMUser}" && $.eventName = "ConsoleLogin" && $.eventType = "AwsConsoleSignIn"}'
      LogGroupName: !Ref CreateCWLogGroup
      MetricTransformations:
        - MetricName: !Sub "Monitor_${IAMUser}_Logins"
          MetricNamespace: CloudTrailMetrics
          MetricValue: 1

  # Create a CloudWatch Alarm
  CreateCloudWatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${IAMUser} Console Logins"
      AlarmDescription: !Sub "Alarms when ${IAMUser} logs into the AWS Console"
      AlarmActions:
        - !Ref CreateAlarmNotificationTopic
      ActionsEnabled: true      
      MetricName: !Sub "Monitor_${IAMUser}_Logins"
      Namespace: CloudTrailMetrics
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Period: 300
      Statistic: Sum
      Threshold: 1

Outputs:
  CloudTrailArn:
    Description: The CloudTrail ARN
    Value: !GetAtt CreateCloudTrail.Arn
  CloudWatchLogGroupArn:
    Description: The Log Group ARN
    Value: !GetAtt CreateCWLogGroup.Arn
  SNSTopicName:
    Description: The SNS Topic Name
    Value: !GetAtt CreateAlarmNotificationTopic.TopicName